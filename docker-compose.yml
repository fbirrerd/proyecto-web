version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file: .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: redis_db
    restart: always
    env_file: .env
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  web:
    build: ./web
    container_name: web_app
    ports:
      - "8080:80"
    networks:
      - app_network

  api:
    build: ./api
    container_name: fastapi-app
    ports:
      - "${API_PORT:-8200}:8200"  # El contenedor siempre expone 8000, es el default de FastAPI
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./api:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:

networks:
  app_network:
    driver: bridge
